<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.atguigu.crud.dao.BaseDataMapper" >
  <resultMap id="BaseResultMap" type="com.atguigu.crud.bean.BaseData" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="campus_name" property="campusName" jdbcType="VARCHAR" />
    <result column="network_address" property="networkAddress" jdbcType="VARCHAR" />
    <result column="mask" property="mask" jdbcType="VARCHAR" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="using_equipment" property="usingEquipment" jdbcType="VARCHAR" />
    <result column="using_department" property="usingDepartment" jdbcType="VARCHAR" />
    <result column="storage_position" property="storagePosition" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, campus_name, network_address, mask, ip, using_equipment, using_department, storage_position, 
    username, password, remarks
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.atguigu.crud.bean.BaseDataExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from base_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectConditionSearchMap" resultMap="BaseResultMap" parameterType="com.atguigu.crud.bean.BaseDataSearchMap" >
    select
    <include refid="Base_Column_List" />
    from base_data WHERE
    <if test='search_campus!="%null%"'>campus_name like CONCAT(CONCAT('%',#{search_campus}), '%')</if>
    <if test='search_address!="%null%"'>and network_address like CONCAT(CONCAT('%', #{search_address}), '%')</if>
    <if test='search_ip!="%null%"'>and ip like CONCAT(CONCAT('%', #{search_ip}), '%')</if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from base_data
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from base_data
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.atguigu.crud.bean.BaseDataExample" >
    delete from base_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.atguigu.crud.bean.BaseData" >
    insert into base_data (id, campus_name, network_address, 
      mask, ip, using_equipment, 
      using_department, storage_position, username, 
      password, remarks)
    values (#{id,jdbcType=INTEGER}, #{campusName,jdbcType=VARCHAR}, #{networkAddress,jdbcType=VARCHAR}, 
      #{mask,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, #{usingEquipment,jdbcType=VARCHAR}, 
      #{usingDepartment,jdbcType=VARCHAR}, #{storagePosition,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.atguigu.crud.bean.BaseData" >
    insert into base_data
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="campusName != null" >
        campus_name,
      </if>
      <if test="networkAddress != null" >
        network_address,
      </if>
      <if test="mask != null" >
        mask,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="usingEquipment != null" >
        using_equipment,
      </if>
      <if test="usingDepartment != null" >
        using_department,
      </if>
      <if test="storagePosition != null" >
        storage_position,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="campusName != null" >
        #{campusName,jdbcType=VARCHAR},
      </if>
      <if test="networkAddress != null" >
        #{networkAddress,jdbcType=VARCHAR},
      </if>
      <if test="mask != null" >
        #{mask,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="usingEquipment != null" >
        #{usingEquipment,jdbcType=VARCHAR},
      </if>
      <if test="usingDepartment != null" >
        #{usingDepartment,jdbcType=VARCHAR},
      </if>
      <if test="storagePosition != null" >
        #{storagePosition,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.atguigu.crud.bean.BaseDataExample" resultType="java.lang.Integer" >
    select count(*) from base_data
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update base_data
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.campusName != null" >
        campus_name = #{record.campusName,jdbcType=VARCHAR},
      </if>
      <if test="record.networkAddress != null" >
        network_address = #{record.networkAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.mask != null" >
        mask = #{record.mask,jdbcType=VARCHAR},
      </if>
      <if test="record.ip != null" >
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.usingEquipment != null" >
        using_equipment = #{record.usingEquipment,jdbcType=VARCHAR},
      </if>
      <if test="record.usingDepartment != null" >
        using_department = #{record.usingDepartment,jdbcType=VARCHAR},
      </if>
      <if test="record.storagePosition != null" >
        storage_position = #{record.storagePosition,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update base_data
    set id = #{record.id,jdbcType=INTEGER},
      campus_name = #{record.campusName,jdbcType=VARCHAR},
      network_address = #{record.networkAddress,jdbcType=VARCHAR},
      mask = #{record.mask,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      using_equipment = #{record.usingEquipment,jdbcType=VARCHAR},
      using_department = #{record.usingDepartment,jdbcType=VARCHAR},
      storage_position = #{record.storagePosition,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.atguigu.crud.bean.BaseData" >
    update base_data
    <set >
      <if test="campusName != null" >
        campus_name = #{campusName,jdbcType=VARCHAR},
      </if>
      <if test="networkAddress != null" >
        network_address = #{networkAddress,jdbcType=VARCHAR},
      </if>
      <if test="mask != null" >
        mask = #{mask,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="usingEquipment != null" >
        using_equipment = #{usingEquipment,jdbcType=VARCHAR},
      </if>
      <if test="usingDepartment != null" >
        using_department = #{usingDepartment,jdbcType=VARCHAR},
      </if>
      <if test="storagePosition != null" >
        storage_position = #{storagePosition,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.atguigu.crud.bean.BaseData" >
    update base_data
    set campus_name = #{campusName,jdbcType=VARCHAR},
      network_address = #{networkAddress,jdbcType=VARCHAR},
      mask = #{mask,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      using_equipment = #{usingEquipment,jdbcType=VARCHAR},
      using_department = #{usingDepartment,jdbcType=VARCHAR},
      storage_position = #{storagePosition,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>